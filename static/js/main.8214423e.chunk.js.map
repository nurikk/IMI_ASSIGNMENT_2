{"version":3,"sources":["logo.svg","AirportAutosuggest.js","useInterval.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getSuggestions","value","escapedValue","trim","replace","regex","RegExp","airports","filter","data","test","name","getSuggestionValue","suggestion","renderSuggestion","AirportAutosuggest","onChange","_","newValue","props","id","setState","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","state","this","placeholder","required","inputProps","className","onSuggestionSelected","event","suggestionValue","suggestionIndex","sectionIndex","method","React","Component","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","Ticket","ticketInfo","doRedirect","style","display","onClick","type","price","alternatives","map","alternative","href","key","currency","departure","time","city","date","travelTime","arrival","SearchForm","onSubmit","useState","Date","startDate","setStartDate","endDate","setEndDate","origin","setOrigin","destination","setDestination","e","stopPropagation","htmlFor","newVal","selected","selectsStart","selectsEnd","minDate","min","max","defaultValue","MapWithAMarker","containerElement","height","mapElement","Filters","start","end","departTime","setDepartTime","returnTime","setReturnTime","defaultChecked","disabled","format","maxValue","minValue","step","SearchResults","Array","from","repeat","x","i","Preroll","progres","setProgres","Progress","animated","BookingAgencyWebsite","scope","withGoogleMap","isValid","obj","originValid","destinationValid","defaultZoom","defaultCenter","lat","lng","position","parseFloat","lon","path","Redirect","CalculateResults","tasks","isDone","length","prog","tasksDone","score","task","push","Example","finishRedirect","redirectIsVisible","agencyWebsiteIsVidible","searchFormVisible","searchResultsVisible","setTimeout","finishSearch","prerollIsVisible","startSearch","toggle","navBarIsOpen","showResults","showResultsIsVisible","Navbar","color","light","expand","NavbarBrand","NavbarToggler","Collapse","isOpen","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","classNames","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8214423e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from \"react\";\nimport Autosuggest from 'react-autosuggest';\nimport './AirportAutosuggest.css';\nimport airports from './airports.json';\n\n\nfunction escapeRegexCharacters(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestions(value) {\n    const escapedValue = escapeRegexCharacters(value.trim());\n\n    if (escapedValue === '') {\n        return [];\n    }\n\n    const regex = new RegExp('^' + escapedValue, 'i');\n\n    return airports.filter(data => regex.test(data.name));\n}\n\nfunction getSuggestionValue(suggestion) {\n    return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n    return (\n        <span>\n            {suggestion.name}\n        </span>\n    );\n}\n\nexport default class AirportAutosuggest extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            value: '',\n            suggestions: []\n        };\n    }\n\n    onChange = (_, {newValue}) => {\n        const {id, onChange} = this.props;\n        // debugger\n        this.setState({value: newValue});\n\n        // onChange(id, newValue);\n    };\n\n    onSuggestionsFetchRequested = ({value}) => {\n        this.setState({suggestions: getSuggestions(value)});\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({suggestions: []});\n    };\n\n    render() {\n        const {id, placeholder, required} = this.props;\n        const {value, suggestions} = this.state;\n        const inputProps = {\n            required,\n            className: 'form-control',\n            placeholder,\n            value,\n            onChange: this.onChange\n        };\n\n        return (<Autosuggest\n            id={id}\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            inputProps={inputProps}\n            onSuggestionSelected={(event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\n                this.props.onChange(id, suggestion)\n            }} \n \n            />);\n    }\n}","import React, { useState, useEffect, useRef } from 'react';\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}","import React, {useState} from \"react\";\n\nimport logo from './logo.svg';\nimport './App.css';\nimport './firework.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport AirportAutosuggest from './AirportAutosuggest';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TimeRangeSlider from 'react-time-range-slider';\nimport classNames from 'classnames';\n\nimport {\n    Progress,\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from 'reactstrap';\nimport useInterval from './useInterval';\nimport AudioPlayer from \"react-h5-audio-player\";\n\nimport {withGoogleMap, GoogleMap, Marker, Polyline} from \"react-google-maps\";\n\nfunction Ticket({ticketInfo, doRedirect}) {\n\n    return (\n        <div\n            className=\"p-2 mb-2 border d-flex ticket\"\n            style={{\n                display: \"block\"\n            }}>\n            {/*\"occasional inline style rule\"*/}\n            <div className=\"h-100 flex-column col-2\">\n                <button\n                    onClick={doRedirect}\n                    type=\"button\"\n                    className=\"mb-auto btn btn-warning btn-lg w-100\">Buy for {ticketInfo.price}$\n                </button>\n                <div className=\"\">\n                    {ticketInfo\n                        .alternatives\n                        .map(alternative => {\n                            return (\n                                <a\n                                    href=\"#\"\n                                    onClick={doRedirect}\n                                    key={alternative.name}\n                                    className=\"p-1 d-flex justify-content-between align-items-center\">\n                                    {alternative.name}&nbsp;<span\n                                    className=\"badge badge-primary badge-pill\">{alternative.price}&nbsp;{ticketInfo.currency}\n                  </span>\n                                </a>\n                            )\n                        })}\n\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-between w-100\">\n                <div className=\"align-self-center\">\n                    <div>\n                        <b>{ticketInfo.departure.time}</b>\n                    </div>\n                    <div>{ticketInfo.departure.city}</div>\n                    <div>{ticketInfo.departure.date}</div>\n                </div>\n                <div className=\"align-self-center\">\n                    Travel time\n                    <b>{ticketInfo.travelTime}</b>\n                </div>\n                <div className=\"align-self-center\">\n                    <div>\n                        <b>{ticketInfo.arrival.time}</b>\n                    </div>\n                    <div>{ticketInfo.arrival.city}</div>\n                    <div>{ticketInfo.arrival.date}</div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nfunction SearchForm({onSubmit}) {\n    const [startDate,\n        setStartDate] = useState(new Date());\n    const [endDate,\n        setEndDate] = useState(new Date());\n\n    const [origin,\n        setOrigin] = useState({});\n    const [destination,\n        setDestination] = useState({});\n\n    function isObject(obj) {\n        return obj === Object(obj);\n    }\n\n    return (\n        <div className=\"h-100\">\n            <form className=\"mb-1 shadow-sm form debug d-flex justify-content-center\"\n                  onSubmit={(e) => onSubmit() && e.stopPropagation()}>\n                <div className=\"form-group col\">\n                    <div className=\"d-flex flex-column\">\n                        <label htmlFor=\"origin\">Origin</label>\n                        <AirportAutosuggest\n                            id=\"origin\"\n                            required\n                            onChange={(id, newVal) => setOrigin(newVal)}\n                            placeholder=\"Enter origin\"/>\n                    </div>\n                </div>\n\n                <div className=\"form-group col\">\n                    <div className=\"d-flex flex-column\">\n                        <label htmlFor=\"destination\">Destination</label>\n                        <AirportAutosuggest\n                            id=\"destination\"\n                            onChange={(id, newVal) => setDestination(newVal)}\n                            placeholder=\"Enter destination\"/>\n                    </div>\n                </div>\n\n                <div className=\"form-group col\">\n                    <div className=\"d-flex flex-column\">\n                        <label htmlFor=\"depart-date\">Depart date</label>\n                        <DatePicker\n                            className=\"form-control\"\n                            selected={startDate}\n                            onChange={date => setStartDate(date)}\n                            selectsStart\n                            startDate={startDate}\n                            endDate={endDate}/>\n                    </div>\n                </div>\n\n                <div className=\"form-group col\">\n                    <div className=\"d-flex flex-column\">\n                        <label htmlFor=\"return-date\">Return date</label>\n                        <DatePicker\n                            className=\"form-control\"\n                            selected={endDate}\n                            onChange={date => setEndDate(date)}\n                            selectsEnd\n                            endDate={endDate}\n                            minDate={startDate}/>\n                    </div>\n                </div>\n\n                <div className=\"form-group col\">\n                    <div className=\"d-flex flex-column\">\n                        <label htmlFor=\"cabin-class\">Cabin class</label>\n                        <select className=\"form-control\" id=\"cabin-class\" className=\"custom-select\">\n                            <option value=\"economy\">Economy</option>\n                            <option value=\"business\">Business</option>\n                            <option value=\"first\">First class</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div className=\"form-group col\">\n                    <div className=\"d-flex flex-column\">\n                        <label htmlFor=\"adults\">Adults</label>\n                        <input\n                            className=\"form-control\"\n                            type=\"number\"\n                            name=\"adults\"\n                            min={1}\n                            max={10}\n                            defaultValue={1}/>\n                    </div>\n                </div>\n\n                <div className=\"form-group col\">\n                    <div className=\"d-flex flex-column\">\n                        <label htmlFor=\"submit\">&nbsp;</label>\n                        <button\n                            type=\"submit\"\n                            id=\"submit\"\n                            className=\"btn btn-success\">Search\n                        </button>\n                    </div>\n                </div>\n            </form>\n            <MapWithAMarker\n                containerElement={< div style={{height: `600px`}}/>}\n                mapElement={< div style={{height: `100%`}}/>}\n                origin={origin}\n                destination={destination}/>\n        </div>\n\n    );\n}\n\nfunction Filters() {\n    const [departTime,\n        setDepartTime] = useState({start: \"00:00\", end: \"23:59\"});\n\n    const [returnTime,\n        setReturnTime] = useState({start: \"00:00\", end: \"23:59\"});\n    return (\n        <section>\n            <form>\n                <fieldset className=\"border p-3 shadow-sm\">\n                    <legend className=\"w-auto\">Layovers count</legend>\n\n                    <div className=\"form-check\">\n                        <input\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            id=\"stops-all\"\n                            defaultChecked={true}/>\n                        <label className=\"form-check-label\" htmlFor=\"stops-all\">\n                            All\n                        </label>\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"stops-direct\"/>\n                        <label className=\"form-check-label\" htmlFor=\"stops-direct\">\n                            Direct flight\n                        </label>\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"stops-1\"/>\n                        <label className=\"form-check-label\" htmlFor=\"stops-1\">\n                            1 stop\n                        </label>\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"stops-2\"/>\n                        <label className=\"form-check-label\" htmlFor=\"stops-2\">\n                            2 stops\n                        </label>\n                    </div>\n\n                </fieldset>\n\n                <fieldset className=\"border p-3 shadow-sm\">\n                    <legend className=\"w-auto\">Departure time</legend>\n\n                    <div className=\"form-group\">\n                        <div className=\"d-flex justify-content-between\">\n                            <b>{departTime.start}</b>\n                            <b>{departTime.end}</b>\n                        </div>\n                        <TimeRangeSlider\n                            disabled={false}\n                            format={24}\n                            maxValue={\"23:59\"}\n                            minValue={\"00:00\"}\n                            name={\"time_range\"}\n                            onChange={setDepartTime}\n                            step={15}\n                            value={departTime}/>\n                    </div>\n\n                </fieldset>\n\n                <fieldset className=\"border p-3 shadow-sm\">\n                    <legend className=\"w-auto\">Return time</legend>\n\n                    <div className=\"form-group\">\n                        <div className=\"d-flex justify-content-between\">\n                            <b>{returnTime.start}</b>\n                            <b>{returnTime.end}</b>\n                        </div>\n                        <TimeRangeSlider\n                            disabled={false}\n                            format={24}\n                            maxValue={\"23:59\"}\n                            minValue={\"00:00\"}\n                            name={\"time_range\"}\n                            onChange={setReturnTime}\n                            step={15}\n                            value={returnTime}/>\n                    </div>\n                </fieldset>\n            </form>\n        </section>\n    );\n}\n\nfunction SearchResults({doRedirect}) {\n    let ticketInfo = {\n        currency: '$',\n        travelTime: '2 hours 20 minutes',\n        price: 100,\n        departure: {\n            time: '12:00',\n            date: '2019-12-12',\n            city: 'Singapore'\n        },\n        arrival: {\n            time: '15:30',\n            date: '2019-12-12',\n            city: 'Phuket'\n        },\n        alternatives: [\n            {\n                name: 'Jetstar',\n                price: 199\n            }, {\n                name: 'Airasia',\n                price: 200\n            }, {\n                name: 'Scoot',\n                price: 250\n            }\n        ]\n    };\n    return Array\n        .from('x'.repeat(5))\n        .map((x, i) => <Ticket doRedirect={doRedirect} key={i} ticketInfo={ticketInfo}/>);\n}\n\nfunction Preroll() {\n    const [progres,\n        setProgres] = useState(0);\n    //simulate activity\n    useInterval(() => {\n        setProgres(progres + 1);\n    }, progres < 100\n        ? 300\n        : null);\n\n    return (\n        <div className=\"shadow-lg p-3 w-50 ml-auto mr-auto\">\n            <h1>Searching tickets</h1>\n            <div className=\"text-center\">{progres}%</div>\n            <Progress max={100} animated value={progres}/>\n        </div>\n    );\n}\n\nfunction BookingAgencyWebsite() {\n    return (\n        <div className=\"border shadow-sm\">\n            <h1>Hello, this is ticket booking agency website</h1>\n            <h2>Here is table with some information with prices</h2>\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">First</th>\n                    <th scope=\"col\">Last</th>\n                    <th scope=\"col\">Handle</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Mark</td>\n                    <td>Otto</td>\n                    <td>@mdo</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Jacob</td>\n                    <td>Thornton</td>\n                    <td>@fat</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">3</th>\n                    <td>Larry</td>\n                    <td>the Bird</td>\n                    <td>@twitter</td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nconst MapWithAMarker = withGoogleMap(({origin, destination}) => {\n\n    const isValid = (obj) => {\n\n        return \"lat\" in obj && \"lon\" in obj\n    };\n\n    const originValid = isValid(origin);\n    const destinationValid = isValid(destination);\n\n    return (\n        <GoogleMap\n            defaultZoom={2}\n            defaultCenter={{\n                lat: 1.290270,\n                lng: 103.851959\n            }}>\n            {isValid(origin)\n                ? (<Marker\n                    position={{\n                        lat: parseFloat(origin.lat),\n                        lng: parseFloat(origin.lon)\n                    }}/>)\n                : null\n            }\n\n            {isValid(destination)\n                ? (<Marker\n                    position={{\n                        lat: parseFloat(destination.lat),\n                        lng: parseFloat(destination.lon)\n                    }}/>)\n                : null\n            }\n\n            {originValid && destinationValid\n                ? <Polyline\n                    path={[\n                        {\n                            lat: parseFloat(origin.lat),\n                            lng: parseFloat(origin.lon)\n                        }, {\n                            lat: parseFloat(destination.lat),\n                            lng: parseFloat(destination.lon)\n                        }\n                    ]}/>\n                : null\n            }\n        </GoogleMap>\n    );\n});\n\nfunction Redirect() {\n    const [progres,\n        setProgres] = useState(0);\n    //simulate activity\n    useInterval(() => {\n        setProgres(progres + 1);\n    }, progres < 100\n        ? 300\n        : null);\n\n    return (\n        <div className=\"shadow-lg p-3 w-50 ml-auto mr-auto\">\n            <h1>Please wait, redirecting you to booking agency web site</h1>\n            <div className=\"text-center\">{progres}%</div>\n            <Progress max={100} animated value={progres}/>\n        </div>\n    );\n}\n\nfunction CalculateResults(){\n  const tasks = [\n    [\"Use of HTML5 structural elements such as header, footer, nav, article and section, instead of div\", 2],\n    [\"Correct use of nav and ul for navigational menu\", 2],\n    [\"Correct use of hyperlinks (both absolute and relative)\", 2],\n    [\"Demonstrated competent use of other HTML elements such as table, ol etc,\", 2],\n    [\"Provide adequate comments\", 2],\n    [\"Use of embedded style sheets with the occasional inline style rules\", 2],\n    [\"Use of CSS for background image, fonts and colours\", 2],\n    [\"Demonstrated the application of the CSS box model (margin, border, padding, content)\", 4],\n    [\"Use of CSS framework such as Bootstrap or Foundation\", 2],\n    [\"Displays at least 5 images\",2],\n    [\"Displays at least 2 videos\",2],\n    [\"Loads at least 1 music file\",2],\n    [\"Use of other web APIs such as Google Maps\",2],\n    [\"Use of CSS or JS image slider/gallery\",2],\n    [\"Complete web form of at least 3 different types of fields (text fields, textarea, radio buttons, checkboxes, buttons)\",2],\n    [\"Perform form validation such as required fields\",3],\n    [\"A response on submitting the form\",1],\n    [\"Use of javascript function for example in web form\",1],\n    [\"Uploaded to a webhost and be a “live” website with shortened URL (goo.gl)\",2],\n    [\"Neat folder structure with separate folders for CSS, JS and assets\",1]\n  ];\n\n  const [progres, setProgres] = useState(0);\n  const isDone =  tasks.length <= progres;\n  useInterval(() => {\n    setProgres(progres + 1);\n}, isDone ? null : 300);\n\n\n  const prog = 100 / tasks.length  * progres;\n\n  const tasksDone = [];\n  let score = 0;\n\n  for (let i =0; i < progres; i++) {\n    const task = tasks[i];\n    score+= task[1];\n    tasksDone.push(<li key={i} className=\"small list-group-item d-flex justify-content-between align-items-center\">\n    {task[0]}\n    <span className=\"badge badge-primary badge-pill\">{task[1]}</span>\n  </li>);\n  }\n  return (<div className=\"w-50 mr-auto ml-auto align-items-center\">\n          <h1>Score is {score}</h1>\n          {isDone ? (\n            <div className=\"pyro\">\n            <div className=\"before\"></div>\n            <div className=\"after\"></div>\n          </div>): null}\n            <div className=\"text-center\">Calculating... {prog}%</div>\n            <Progress max={100} animated value={prog}/>\n\n            <ul className=\"list-group\">\n              {tasksDone}\n            </ul>\n\n  </div>);\n}\n\nexport default class Example extends React.Component {\n\n    constructor(props) {\n        super(props);\n        //default state initialisation\n        this.state = {\n            showResultsIsVisible: false,\n            navBarIsOpen: false,\n            searchFormVisible: true,\n            searchResultsVisible: false,\n            prerollIsVisible: false,\n            redirectIsVisible: false,\n            agencyWebsiteIsVidible: false\n        };\n    }\n\n    finishRedirect = () => {\n        this.setState({redirectIsVisible: false, agencyWebsiteIsVidible: true, searchFormVisible: false});\n    }\n\n    doRedirect = () => {\n        this.setState({redirectIsVisible: true, searchResultsVisible: false, searchFormVisible: false});\n        setTimeout(this.finishRedirect, 5000);\n    }\n    finishSearch = () => {\n        this.setState({prerollIsVisible: false, searchResultsVisible: true});\n    }\n\n    startSearch = () => {\n        this.setState({prerollIsVisible: true, searchResultsVisible: false, searchFormVisible: false});\n        setTimeout(this.finishSearch, 5000);\n    }\n    //toggle navbar\n    toggle = () => {\n        this.setState({\n            navBarIsOpen: !this.state.navBarIsOpen\n        });\n    }\n    showResults = () => {\n      this.setState({\n        showResultsIsVisible: true\n      });\n    }\n\n    render() {\n        //main render routine\n        const {\n            navBarIsOpen,\n            searchFormVisible,\n            searchResultsVisible,\n            prerollIsVisible,\n            redirectIsVisible,\n            agencyWebsiteIsVidible,\n            showResultsIsVisible\n        } = this.state;\n        if (showResultsIsVisible) {\n          return <CalculateResults />;\n        }\n\n        return agencyWebsiteIsVidible\n            ? <BookingAgencyWebsite/>\n            : (\n                <div className=\"h-100\">\n                    <header>\n                        <Navbar color=\"light\" light expand=\"md\">\n                            <NavbarBrand href=\"/\">Search tickets</NavbarBrand>\n                            <NavbarToggler onClick={this.toggle}/>\n                            <Collapse isOpen={navBarIsOpen} navbar>\n                                <Nav className=\"ml-auto\" navbar>\n                                    <NavItem>\n                                        <NavLink href=\"https://github.com/nurikk/IMI_ASSIGNMENT_2\">Source code</NavLink>\n                                    </NavItem>\n                                    <NavItem>\n                                        <NavLink href=\"#\" onClick={this.showResults}><b>Assesment score</b></NavLink>\n                                    </NavItem>\n                                    <NavItem>\n                                        <NavLink href=\"./assesment-points.html\">Assesment required stuff</NavLink>\n                                    </NavItem>\n                                    <UncontrolledDropdown nav inNavbar>\n                                        <DropdownToggle nav caret>\n                                            Super interesting DropdownMenu\n                                        </DropdownToggle>\n                                        <DropdownMenu right>\n                                            <DropdownItem>\n                                                Nothing is here\n                                            </DropdownItem>\n                                            <DropdownItem>\n                                                Nothing is here\n                                            </DropdownItem>\n                                            <DropdownItem divider/>\n                                            <DropdownItem>\n                                                Nothing is here\n                                            </DropdownItem>\n                                        </DropdownMenu>\n                                    </UncontrolledDropdown>\n                                </Nav>\n                            </Collapse>\n                        </Navbar>\n                    </header>\n                    {searchFormVisible\n                        ? <SearchForm onSubmit={this.startSearch}/>\n                        : null}\n\n                    {prerollIsVisible\n                        ? <Preroll/>\n                        : null}\n\n                    {redirectIsVisible\n                        ? <Redirect/>\n                        : null}\n                    <article\n                        className={classNames(\"debug container-fluid\", {\n                            \"d-none\": !searchResultsVisible\n                        })}>\n                        <div className=\"row\">\n                            <div className=\"filters col-2\">\n                                <Filters/>\n                            </div>\n                            <div className=\"debug tickets col\">\n                                <SearchResults doRedirect={this.doRedirect}/>\n                            </div>\n                        </div>\n                    </article>\n                </div>\n            );\n    }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}