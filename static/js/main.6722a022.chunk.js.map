{"version":3,"sources":["logo.svg","AirportAutosuggest.js","useInterval.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getSuggestions","value","escapedValue","trim","replace","regex","RegExp","airports","filter","data","test","name","getSuggestionValue","suggestion","renderSuggestion","AirportAutosuggest","onChange","_","newValue","props","id","setState","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","state","this","placeholder","inputProps","className","onSuggestionSelected","event","suggestionValue","suggestionIndex","sectionIndex","method","React","Component","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","Ticket","ticketInfo","doRedirect","style","display","onClick","type","price","alternatives","map","alternative","href","key","currency","departure","time","city","date","travelTime","arrival","SearchForm","onSubmit","useState","Date","startDate","setStartDate","endDate","setEndDate","origin","setOrigin","destination","setDestination","htmlFor","newVal","selected","selectsStart","selectsEnd","minDate","min","max","defaultValue","MapWithAMarker","containerElement","height","mapElement","Filters","start","end","departTime","setDepartTime","returnTime","setReturnTime","defaultChecked","disabled","format","maxValue","minValue","step","SearchResults","Array","from","repeat","x","i","Preroll","progres","setProgres","Progress","animated","BookingAgencyWebsite","width","src","frameborder","allow","allowfullscreen","withGoogleMap","isValid","obj","originValid","destinationValid","defaultZoom","defaultCenter","lat","lng","position","parseFloat","lon","path","Redirect","Example","finishRedirect","redirectIsVisible","agencyWebsiteIsVidible","searchFormVisible","searchResultsVisible","setTimeout","finishSearch","prerollIsVisible","startSearch","toggle","navBarIsOpen","Navbar","color","light","expand","NavbarBrand","NavbarToggler","Collapse","isOpen","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","autoPlay","classNames","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6722a022.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from \"react\";\nimport Autosuggest from 'react-autosuggest';\nimport './AirportAutosuggest.css';\nimport airports from './airports.json';\n\n\nfunction escapeRegexCharacters(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestions(value) {\n    const escapedValue = escapeRegexCharacters(value.trim());\n\n    if (escapedValue === '') {\n        return [];\n    }\n\n    const regex = new RegExp('^' + escapedValue, 'i');\n\n    return airports.filter(data => regex.test(data.name));\n}\n\nfunction getSuggestionValue(suggestion) {\n    return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n    return (\n        <span>\n            {suggestion.name}\n        </span>\n    );\n}\n\nexport default class AirportAutosuggest extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            value: '',\n            suggestions: []\n        };\n    }\n\n    onChange = (_, {newValue}) => {\n        const {id, onChange} = this.props;\n        // debugger\n        this.setState({value: newValue});\n\n        // onChange(id, newValue);\n    };\n\n    onSuggestionsFetchRequested = ({value}) => {\n        this.setState({suggestions: getSuggestions(value)});\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({suggestions: []});\n    };\n\n    render() {\n        const {id, placeholder} = this.props;\n        const {value, suggestions} = this.state;\n        const inputProps = {\n            className: 'form-control',\n            placeholder,\n            value,\n            onChange: this.onChange\n        };\n\n        return (<Autosuggest\n            id={id}\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            inputProps={inputProps}\n            onSuggestionSelected={(event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\n                this.props.onChange(id, suggestion)\n            }} \n \n            />);\n    }\n}","import React, { useState, useEffect, useRef } from 'react';\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}","import React, {useState} from \"react\";\n\nimport logo from './logo.svg';\nimport './App.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport AirportAutosuggest from './AirportAutosuggest';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TimeRangeSlider from 'react-time-range-slider';\nimport classNames from 'classnames';\n\n\nimport {\n  Header,\n  Progress,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\nimport useInterval from './useInterval';\nimport AudioPlayer from \"react-h5-audio-player\";\n\n\n\nimport {\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  Polyline\n} from \"react-google-maps\";\n\nfunction Ticket({ticketInfo, doRedirect}) {\n  \n  return (\n    <div className=\"p-2 mb-2 border d-flex ticket\" style={{display: \"block\"}}> {/*\"occasional inline style rule\"*/}\n      <div className=\"h-100 flex-column col-2\">\n        <button\n          onClick={doRedirect}\n          type=\"button\"\n          className=\"mb-auto btn btn-warning btn-lg w-100\">Buy for {ticketInfo.price}$</button>\n        <div className=\"\">\n          {ticketInfo\n            .alternatives\n            .map(alternative => {\n              return (\n                <a\n                  href=\"#\"\n                  onClick={doRedirect}\n                  key={alternative.name}\n                  className=\"p-1 d-flex justify-content-between align-items-center\">\n                  {alternative.name}&nbsp;<span className=\"badge badge-primary badge-pill\">{alternative.price}&nbsp;{ticketInfo.currency}\n                  </span>\n                </a>\n              )\n            })\n}\n\n        </div>\n      </div>\n      <div className=\"d-flex justify-content-between w-100\">\n        <div className=\"align-self-center\">\n          <div>\n            <b>{ticketInfo.departure.time}</b>\n          </div>\n          <div>{ticketInfo.departure.city}</div>\n          <div>{ticketInfo.departure.date}</div>\n        </div>\n        <div className=\"align-self-center\">\n          Travel time\n          <b>{ticketInfo.travelTime}</b>\n        </div>\n        <div className=\"align-self-center\">\n          <div>\n            <b>{ticketInfo.arrival.time}</b>\n          </div>\n          <div>{ticketInfo.arrival.city}</div>\n          <div>{ticketInfo.arrival.date}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction SearchForm({onSubmit}) {\n  const [startDate,\n    setStartDate] = useState(new Date());\n  const [endDate,\n    setEndDate] = useState(new Date());\n\n  const [origin,\n    setOrigin] = useState({});\n  const [destination,\n    setDestination] = useState({});\n\n\n    function isObject(obj) {\n      return obj === Object(obj);\n    }\n  return (\n    <div className=\"h-100\">\n    <form className=\"mb-1 shadow-sm form debug d-flex justify-content-center\">\n      <div className=\"form-group col\">\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"origin\">Origin</label>\n          <AirportAutosuggest\n            id=\"origin\"\n            onChange={(id, newVal) => setOrigin(newVal)}\n            placeholder=\"Enter origin\"/>\n        </div>\n      </div>\n\n      <div className=\"form-group col\">\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"destination\">Destination</label>\n          <AirportAutosuggest\n            id=\"destination\"\n            onChange={(id, newVal) => setDestination(newVal)}\n            placeholder=\"Enter destination\"/>\n        </div>\n      </div>\n\n      <div className=\"form-group col\">\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"depart-date\">Depart date</label>\n          <DatePicker\n            className=\"form-control\"\n            selected={startDate}\n            onChange={date => setStartDate(date)}\n            selectsStart\n            startDate={startDate}\n            endDate={endDate}/>\n        </div>\n      </div>\n\n      <div className=\"form-group col\">\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"return-date\">Return date</label>\n          <DatePicker\n            className=\"form-control\"\n            selected={endDate}\n            onChange={date => setEndDate(date)}\n            selectsEnd\n            endDate={endDate}\n            minDate={startDate}/>\n        </div>\n      </div>\n\n      <div className=\"form-group col\">\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"cabin-class\">Cabin class</label>\n          <select className=\"form-control\" id=\"cabin-class\" className=\"custom-select\">\n            <option value=\"economy\">Economy</option>\n            <option value=\"business\">Business</option>\n            <option value=\"first\">First class</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"form-group col\">\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"adults\">Adults</label>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            name=\"adults\"\n            min={1}\n            max={10}\n            defaultValue={1}/>\n        </div>\n      </div>\n\n      <div className=\"form-group col\">\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"submit\">&nbsp;</label>\n          <button\n            type=\"button\"\n            onClick={onSubmit}\n            id=\"submit\"\n            className=\"btn btn-success\">Search</button>\n        </div>\n      </div>\n    </form>\n    <MapWithAMarker \n    containerElement={<div style={{ height: `600px` }} />}\n    mapElement={<div style={{ height: `100%` }} />}\n    origin={origin} \n    destination={destination}/>\n    </div>\n\n  );\n}\n\nfunction Filters() {\n  const [departTime,\n    setDepartTime] = useState({start: \"00:00\", end: \"23:59\"});\n\n  const [returnTime,\n    setReturnTime] = useState({start: \"00:00\", end: \"23:59\"});\n  return (\n    <section>\n    <form>\n      <fieldset className=\"border p-3 shadow-sm\">\n        <legend className=\"w-auto\">Layovers count</legend>\n\n        <div className=\"form-check\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"stops-all\"\n            defaultChecked={true}/>\n          <label className=\"form-check-label\" htmlFor=\"stops-all\">\n            All\n          </label>\n        </div>\n        <div className=\"form-check\">\n          <input className=\"form-check-input\" type=\"checkbox\" id=\"stops-direct\"/>\n          <label className=\"form-check-label\" htmlFor=\"stops-direct\">\n            Direct flight\n          </label>\n        </div>\n        <div className=\"form-check\">\n          <input className=\"form-check-input\" type=\"checkbox\" id=\"stops-1\"/>\n          <label className=\"form-check-label\" htmlFor=\"stops-1\">\n            1 stop\n          </label>\n        </div>\n        <div className=\"form-check\">\n          <input className=\"form-check-input\" type=\"checkbox\" id=\"stops-2\"/>\n          <label className=\"form-check-label\" htmlFor=\"stops-2\">\n            2 stops\n          </label>\n        </div>\n\n      </fieldset>\n\n      <fieldset className=\"border p-3 shadow-sm\">\n        <legend className=\"w-auto\">Departure time</legend>\n\n        <div className=\"form-group\">\n          <div className=\"d-flex justify-content-between\">\n            <b>{departTime.start}</b>\n            <b>{departTime.end}</b>\n          </div>\n          <TimeRangeSlider\n            disabled={false}\n            format={24}\n            maxValue={\"23:59\"}\n            minValue={\"00:00\"}\n            name={\"time_range\"}\n            onChange={setDepartTime}\n            step={15}\n            value={departTime}/>\n        </div>\n\n      </fieldset>\n\n      <fieldset className=\"border p-3 shadow-sm\">\n        <legend className=\"w-auto\">Return time</legend>\n\n        <div className=\"form-group\">\n          <div className=\"d-flex justify-content-between\">\n            <b>{returnTime.start}</b>\n            <b>{returnTime.end}</b>\n          </div>\n          <TimeRangeSlider\n            disabled={false}\n            format={24}\n            maxValue={\"23:59\"}\n            minValue={\"00:00\"}\n            name={\"time_range\"}\n            onChange={setReturnTime}\n            step={15}\n            value={returnTime}/>\n        </div>\n      </fieldset>\n    </form>\n    </section>\n  );\n}\n\nfunction SearchResults({doRedirect}) {\n  let ticketInfo = {\n    currency: '$',\n    travelTime: '2 hours 20 minutes',\n    price: 100,\n    departure: {\n      time: '12:00',\n      date: '2019-12-12',\n      city: 'Singapore'\n    },\n    arrival: {\n      time: '15:30',\n      date: '2019-12-12',\n      city: 'Phuket'\n    },\n    alternatives: [\n      {\n        name: 'Jetstar',\n        price: 199\n      }, {\n        name: 'Airasia',\n        price: 200\n      }, {\n        name: 'Scoot',\n        price: 250\n      }\n    ]\n  };\n  return Array\n    .from('x'.repeat(5))\n    .map((x, i) => <Ticket doRedirect={doRedirect} key={i} ticketInfo={ticketInfo}/>);\n}\n\nfunction Preroll() {\n  const [progres,\n    setProgres] = useState(0);\n  //simulate activity\n  useInterval(() => {\n    setProgres(progres + 1);\n  }, progres < 100 ? 300 : null);\n\n  return (\n    <div className=\"border shadow-sm\">\n      <h1>Searching tickets</h1>\n      <div className=\"text-center\">{progres}%</div>\n      <Progress max={100} animated value={progres}/>\n    </div>\n  );\n}\n\nfunction BookingAgencyWebsite() {\n\n  return (\n    <div className=\"border shadow-sm\">\n      <h1>Hello, this is ticket booking agency website</h1>\n\n      <iframe\n        width=\"560\"\n        height=\"315\"\n        src=\"https://www.youtube.com/embed/dQw4w9WgXcQ?controls=0\"\n        frameborder=\"0\"\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n        allowfullscreen></iframe>\n    </div>\n  );\n}\n\nconst MapWithAMarker = withGoogleMap(({origin, destination}) => {\n  \n  const isValid = (obj) => {\n\n    return \"lat\" in obj && \"lon\" in obj\n  };\n\n  const originValid = isValid(origin);\n  const destinationValid = isValid(destination);\n  \n  \n  return (<GoogleMap defaultZoom={2} defaultCenter={{ lat: 1.290270, lng: 103.851959}}>\n    {\n      isValid(origin) ? (<Marker position={{ lat: parseFloat(origin.lat), lng: parseFloat(origin.lon) }} />) : null      \n    }\n\n    {\n      isValid(destination) ? (<Marker position={{ lat: parseFloat(destination.lat), lng: parseFloat(destination.lon) }} />) : null      \n    }\n\n    {\n      originValid && destinationValid ? <Polyline path={[\n        { lat: parseFloat(origin.lat), lng: parseFloat(origin.lon) },\n        { lat: parseFloat(destination.lat), lng: parseFloat(destination.lon) }\n      ]}/> : null\n    }\n  </GoogleMap>);\n}\n);\n\n\n\nfunction Redirect() {\n  const [progres,\n    setProgres] = useState(0);\n  //simulate activity\n  useInterval(() => {\n    setProgres(progres + 1);\n  }, progres < 100\n    ? 300\n    : null);\n\n  return (\n    <div className=\"border shadow-sm\">\n      <h1>Please wait, redirecting you to booking agency web site</h1>\n      <div className=\"text-center\">{progres}%</div>\n      <Progress max={100} animated value={progres}/>\n    </div>\n  );\n}\n\nexport default class Example extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    //default state initialisation\n    this.state = {\n      navBarIsOpen: false,\n      searchFormVisible: true,\n      searchResultsVisible: false,\n      prerollIsVisible: false,\n      redirectIsVisible: false,\n      agencyWebsiteIsVidible: false\n    };\n  }\n\n  finishRedirect = () => {\n    this.setState({redirectIsVisible: false, agencyWebsiteIsVidible: true, searchFormVisible: false});\n  }\n\n  doRedirect = () => {\n    this.setState({redirectIsVisible: true, searchResultsVisible: false, searchFormVisible: false});\n    setTimeout(this.finishRedirect, 5000);\n  }\n  finishSearch = () => {\n    this.setState({prerollIsVisible: false, searchResultsVisible: true});\n  }\n\n  startSearch = () => {\n    this.setState({prerollIsVisible: true, searchResultsVisible: false, searchFormVisible: false});\n    setTimeout(this.finishSearch, 5000);\n  }\n  //toggle navbar\n  toggle = () => {\n    this.setState({\n      navBarIsOpen: !this.state.navBarIsOpen\n    });\n  }\n\n  render() {\n    //main render routine\n    const {searchFormVisible,  searchResultsVisible, prerollIsVisible, redirectIsVisible, agencyWebsiteIsVidible} = this.state;\n    return agencyWebsiteIsVidible ? <BookingAgencyWebsite/ > : \n      (<div className=\"h-100\">\n      <header>\n      <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand href=\"/\">Search tickets</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.navBarIsOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"https://github.com/nurikk/IMI_ASSIGNMENT_2\">GitHub</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/assesment-points.html\">Assesment required stuff</NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Super interesting DropdownMenu\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>\n                  Nothing is here\n                  </DropdownItem>\n                  <DropdownItem>\n                  Nothing is here\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>\n                  Nothing is here\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n        <AudioPlayer\n          autoPlay\n          src=\"https://www.soundboard.com/handler/DownLoadTrack.ashx?cliptitle=Never+Gonna+Give+You+Up-+Original&filename=mz/Mzg1ODMxNTIzMzg1ODM3_JzthsfvUY24.MP3\"\n        />\n        </header>\n        { searchFormVisible ? <SearchForm onSubmit={this.startSearch}/> : null} \n\n         {prerollIsVisible\n          ? <Preroll/>\n          : null}\n\n        {redirectIsVisible\n          ? <Redirect/>\n          : null}\n        <article\n          className={classNames(\"debug container-fluid\", {\n          \"d-none\": !searchResultsVisible\n        })}>\n          <div className=\"row\">\n            <div className=\"filters col-2\">\n              <Filters/>\n            </div>\n            <div className=\"debug tickets col\">\n              <SearchResults doRedirect={this.doRedirect}/>\n            </div>\n          </div>\n        </article>\n      </div>);\n  }\n\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}